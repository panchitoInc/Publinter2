@model DataModule.Entities.Medio
@{
    int index = (ViewData["indexPrograma"] == null) ? 0 : (int)ViewData["indexPrograma"];
}



<tr id="tr_programa_@index">
    <td>
        @Html.TextBoxFor(x => x.Programas[index].Nombre, new { style = "width: 100%;border: 1px solid #ccc;height: 30px; " })
    </td>
    <td>
        <div class="input-group bootstrap-timepicker timepicker">
            @Html.TextBoxFor(x => x.Programas[index].HoraInicio, new { @class = "hourPicker", style = "width: 100%;border: 1px solid #ccc;height: 30px; " })
            <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
        </div>

        

    </td>
    <td>
        @Html.TextBoxFor(x => x.Programas[index].Duracion, new { style = "width: 100%;border: 1px solid #ccc;height: 30px; " })
    </td>
    <td>
        @Html.TextBoxFor(x => x.Programas[index].PrecioSegundo, "{0:0.00}", new { style = "width: 100%;border: 1px solid #ccc;height: 30px; " })
    </td>
    <td class="text-center">
        @Html.CheckBoxFor(x => x.Programas[index].Delete, new { @class = "hidden" })
        @Html.HiddenFor(x => x.Programas[index].ProgramaId)
        <a href="javascript:void(0);" onclick="javascript:DeleteRenglonPrograma(@index)">
            <i class="material-icons">clear</i>
        </a>

    </td>
</tr>