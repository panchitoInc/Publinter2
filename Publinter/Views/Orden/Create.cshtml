@model Publinter.Models.Orden_Create_Model

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/Admin/bower_components/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet" />

<script src="~/Content/Admin/bower_components/moment/min/moment.min.js"></script>
<script src="~/Content/Admin/bower_components/moment/min/moment-with-locales.min.js"></script>
<script src="~/Content/Admin/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
<script src="~/Content/Utils.js"></script>

<style>
    .content-wrapper {
        display: inline-grid;
        min-height: -webkit-fill-available !important;
    }

    #mensajeExito {
        display: none;
        position: absolute;
        left: CALC(50%);
        bottom: 15px;
        padding: 10px;
        border-radius: 4px;
        color: white;
        background-color: rgb(63, 175, 82);
        width: 200px;
    }

    #mensajeErrorBack {
        display: none;
        position: absolute;
        left: CALC(50%);
        bottom: 15px;
        padding: 10px;
        border-radius: 4px;
        color: white;
        background-color: #da6262;
        width: 250px;
    }

    th {
        text-align: center;
    }

    td {
        text-align: center;
        border: 1px solid;
    }

    tr {
        height: 20px
    }

    .dato {
        width: 25px;
    }

    .noHabil {
        background-color: #ececec;
    }

    th {
        padding: 5px;
    }

    .tdBlack {
        width: 100px;
        background-color: black;
        color: white;
    }

    .txtEmisiones {
        width: 25px;
        height: 40px;
        text-align: center;
        border: none;
    }
</style>

<script>

    $(document).ready(function () {


        $("input.txtEmisiones").keypress(function (e) {

            if (e.wich) {

            }
        });
       // FiltrarProgramas();
        //FiltrarMateriales();

        SetPrograma(0);
        SetMaterial(0);

        $("#Emision").val(formattedDate($("#Emision").val()));

        $("#Emision").daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            "autoApply": true,
            "showCustomRangeLabel": false,
            locale: {
                format: 'D/M/YYYY'
            }
        });

         doc = new jsPDF();
         specialElementHandlers = {
            '#editor': function (element, renderer) {
                return true;
            }
        };
    })

    function AgregarPrimeraLinea()
    {
        var form = $("#formOrden");
        $(".btnLineas").attr("disabled","disabled")
        $.ajax({
            url: '@Url.Action("AgregarPrimeraLinea", "Orden")',
            type: 'POST',
            dataType: 'json',
            data: form.serialize(),
            success: function (data) {
                $('#divLineas').append(data.html);
                //SetPrograma(data.index);
                //SetMaterial(data.index);
                CalcularTotalLinea(data.index);
            }
        });
    }

    function AgregarSiguienteMes()
    {
        var form = $("#formOrden");
        $(".btnLineas").attr("disabled","disabled")
        $.ajax({
            url: '@Url.Action("AgregarSiguienteMes", "Orden")',
            type: 'POST',
            dataType: 'json',
            data: form.serialize(),
            success: function (data) {
                $('#divLineas').append(data.html);
                //SetPrograma(data.index);
                //SetMaterial(data.index);
                CalcularTotalLinea(data.index);
            }
        });
    }

    function CopiarUltimoMes()
    {
        var form = $("#formOrden");
        $(".btnLineas").attr("disabled","disabled")
        $.ajax({
            url: '@Url.Action("CopiarUltimoMes", "Orden")',
            type: 'POST',
            dataType: 'json',
            data: form.serialize(),
            success: function (data) {
                $('#divLineas').append(data.html);
                //SetPrograma(data.index);
                //SetMaterial(data.index);
                CalcularTotalLinea(data.index);
            }
        });
    }

    function SetPrograma(index)
    {
        var progId = $("#Programa_" + index).val();
        $("#Lineas_" + index + "__ProgramaId").val(progId);
    }

    function SetMaterial(index)
    {
        var matId = $("#Material_" + index).val();
        $("#Lineas_" + index + "__MaterialId").val(matId);
    }

    function CalcularTotalLinea(index)
    {
        var totalLinea = 0;

        for(var e = 0; e < $(".LineaInterna").length; e++)
        {
            var precio = parseFloat($("#Programa_" + index + "_" + e + " option:selected").data("precio"));
            var duracion = parseInt($("#Material_" + index + "_" + e + " option:selected").data("duracion"));
            var nroDias = $(".dia_" + index + "_" + e).length;
            var emisiones = 0;

            for(var i = 0; i < nroDias; i++)
            {
                var emisionesDia = parseInt($("#Lineas_" + index + "__LineaInterna_" + e + "__Mes_Dias_" + i + "__NroEmisiones").val());

                var totalDia = emisionesDia * precio * duracion;
                $("#Lineas_" + index + "__LineaInterna_" + e + "__Mes_Dias_" + i + "__TotalDia").val(totalDia);

                emisiones += emisionesDia;
            }

            var totalLineaInterna = precio * emisiones;

            $("#Lineas_" + index + "__LineaInterna_" + e + "__TotalLinea").val(totalLineaInterna);
            $("#totalMes_" + index + "_" + e).text("$ " + numberThousandSeparator(floatToStringDecimals(totalLineaInterna, 2)));

            totalLinea += totalLineaInterna;
        }

        $("#Lineas_" + index + "__TotalLinea").val(totalLinea);

        CalcularTotalOrden();
    }

    function CalcularTotalOrden()
    {
        var cantLineas = $(".lineaOrden").length;
        var totalOrden = 0;

        for(var i = 0; i < cantLineas; i++)
        {
            totalOrden += parseFloat($("#Lineas_" + i + "__TotalLinea").val());
        }

        $("#totalOrden").text(numberThousandSeparator(floatToStringDecimals(totalOrden, 2)));
        $("#TotalOrden").val(totalOrden);
    }

    function FiltrarProgramas()
    {
        var medioId = parseInt($("#MedioId").val());

        $.ajax({
            url: '@Url.Action("GetProgramas", "Medio")',
            type: 'POST',
            dataType: 'json',
            data: { "medioId" : medioId },
            success: function (data) {
                $(".Programa").html(data.html);
            }
        });
    }

    function FiltrarMateriales()
    {
        var clienteId = $("#ClienteId").val();

        $.ajax({
            url: '@Url.Action("GetMateriales", "Cliente")',
            type: 'POST',
            dataType: 'json',
            data: { "clienteId" : clienteId },
            success: function (data) {
                $(".Material").html(data.html);
            }
        });
    }

    function openMensajeExito()
    {
        $("#mensajeExito").fadeIn();
        setTimeout(function () { $("#mensajeExito").fadeOut(); $("#errorMsgDiv").fadeOut(); }, 10000)
    }

    function openMensajeErrorBack()
    {
        $("#mensajeErrorBack").fadeIn();
        setTimeout(function () { $("#mensajeErrorBack").fadeOut(); $("#errorMsgDivBack").fadeOut(); }, 10000)
    }

    function ShowMsgErrorComp() {
        $("#errorMsgDiv").slideDown();
    }

    function closeMessage()
    {
        $("#mensajeExito").fadeOut();
        $("#mensajeError").fadeOut();
        $("#errorMsgDiv").fadeOut();
    }

    function LimpiarDatos()
    {
        ReiniciarLineas();
        AddNumero();
    }

    function ReiniciarLineas()
    {
        $("#divLineas").html("");
        AgregarPrimeraLinea();
    }

    function AddNumero()
    {
        $("#NroOrden").val(parseInt($("#NroOrden").val()) + 1);
        $("h3.title").text("Órden Nro. " + $("#NroOrden").val());
    }

    function GuardarOrden()
    {
        var form = $("#formOrden");
        $("#btnGuardar").attr("disabled", "disabled");
        $.ajax({
            url: '@Url.Action("Create", "Orden")',
            type: 'POST',
            dataType: 'json',
            data: form.serialize(),
            success: function (data) {
                if(data.value)
                {
                    LimpiarDatos();
                    $("#txtMensajeExito").text(data.descripcion);
                    $("#txtMensajeExito").attr("href", "IndexDetalle");
                    openMensajeExito();
                }
                else
                {
                    $("#msgErrorBack").text(data.errorMsg);
                    openMensajeErrorBack();
                }
                $("#btnGuardar").removeAttr("disabled");
            }
        });
    }


    //funcion para exportar el form a pdf.
    function ExportPdf() {
        //var doc = new jsPDF('p', 'pt');
        //var elem = document.getElementById("basic-table");
        //var res = doc.autoTableHtmlToJson(elem);
        //doc.autoTable(res.columns, res.data);
        //doc.save("table.pdf");

        /**/
        //var doc = new jsPDF();
        //var specialElementHandlers = {
        //    '#editor': function (element, renderer) {
        //        return true;
        //    }
        //};
        //doc.fromHTML($('#Lineas').html(), 15, 15, {
        //    'width': 170,
        //    'elementHandlers': specialElementHandlers
        //});
        //doc.save('sample-file.pdf');


        // This code is collected but useful, click below to jsfiddle link.
        @*var formHtml = $("#formOrden").html();
        var object = { "html": "" };


       *@
        $.ajax({
            type: "POST",
            traditional: true,
           // data: object,
            url: '@Url.Action("ExportPdf", "Orden")',
            success: function (e) {
                ExportPdfSuccess(e, index);
            }
        });
    }

    function ExportPdfSuccess(data, index) { }
   
    function demoFromHTML() {
        const filename  = 'ThisIsYourPDFFilename.pdf';

        //doc.fromHTML($('#wrap_orden').html(), 15, 15, {
        //    'width': 170,
        //    'elementHandlers': specialElementHandlers
        //});
        //doc.save('sample-file.pdf');
        html2canvas(document.querySelector('#wrap_orden')).then(canvas => {
            
            let pdf = new jsPDF('l', 'mm', 'a4');
            var a = canvas.toDataURL('image/png');
            pdf.addImage(a, 'PNG', 0, 0, 211, 100);
            pdf.save(filename);
            
        });

   
    }
    $(function () {
        $("#btnSubmit").click(function () {
            $("input[name='GridHtml']").val($("#Lineas").html());
          //  $("input[name='GridHtml']").val("");
            //<table><thead><tr><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>b</td><td>b</td><td>b</td></tr></tbody></table>
        });
    });
</script>

<div class=" register-box-body col-sm-12">
    
    @using (Html.BeginForm("Create", "Orden", FormMethod.Post, new { @id = "formOrden" }))
    {
        <div id="wrap_orden">
            <div id="divEncabezado">
                @Html.Partial("~/Views/Orden/CreateEncabezado.cshtml", Model)
            </div>
            <div id="divLineas">
                @Html.Partial("~/Views/Orden/CreateLineas.cshtml", Model)
            </div>
            <div id="divFooter">
                @Html.Partial("~/Views/Orden/CreateFooter.cshtml", Model)
            </div>
        </div>
        <div>
            @*<input id="btnExportPdf" type="button" value="Exportar documento"  style="width:150px;height:27px" />*@
            @Html.ActionLink("Same as above but prompts to download as a file", "IndexWithAccessToDocumentAndWriterDownloadFile", "Pdf")<br />
        </div>
    }
    @using (Html.BeginForm("createPdf", "Orden", FormMethod.Post))
    {
        <input type="hidden" name="GridHtml" />
        <input type="submit" id="btnSubmit" value="Export" />
    }
</div>

<div id="mensajeExito">
    <div style="opacity: 1; margin-top: 0px;">
        <div>
            <a href="#" class="pull-right" onclick="closeMessage()" style="color:white"><i class="fa fa-close" aria-hidden="true"></i></a>
            <a id="txtMensajeExito" target="_blank" href="" style="font-weight:bold;color:white"></a> generada correctamente.
        </div>
    </div>
</div>

<div id="mensajeErrorBack">
    <div style="opacity: 1; margin-top: 0px;">
        <div>
            <a href="#" class="pull-right" onclick="closeMessage()" style="color:white"><i class="fa fa-close" aria-hidden="true"></i></a>
            <span id="spanErrorCompBack">Hubo un error al generar la órden.</span>
            <div>
                <a id="errorMsgVerDetalle" href="javascript:ShowMsgErrorComp()" style="color:white;font-size:12px">Ver detalle</a>
                <div id="errorMsgDiv" style="display:none">
                    <span id="msgError"></span>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="bypassme"></div>


<script src="~/Scripts/Utils.js"></script>
<script src="~/Content/JS/jsPdf/jspdf.min.js"></script>
<script src="~/Content/JS/jsPdf/jspdf-autotable.js"></script>
<script src="~/Scripts/html2canvas.js"></script>


<script>
    
    function HTMLtoPDF() {
        debugger;
        var pdf = new jsPDF('p', 'pt', 'letter');
        // source can be HTML-formatted string, or a reference
        // to an actual DOM element from which the text will be scraped.
        source = document.getElementById("ordenl");

        // we support special element handlers. Register them with jQuery-style 
        // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
        // There is no support for any other type of selectors 
        // (class, of compound) at this time.
        specialElementHandlers = {
            // element with id of "bypass" - jQuery style selector
            '#bypassme': function (element, renderer) {
                // true = "handled elsewhere, bypass text extraction"
                return true
            }
        };
        margins = {
            top: 80,
            bottom: 60,
            left: 40,
            width: 522
        };
        // all coords and widths are in jsPDF instance's declared units
        // 'inches' in this case
        pdf.fromHTML(
        source, // HTML string or DOM elem ref.
        margins.left, // x coord
        margins.top, { // y coord
            'width': margins.width, // max width of content on PDF
            'elementHandlers': specialElementHandlers
        },

        function (dispose) {
            // dispose: object with X, Y of the last line add to the PDF 
            //          this allow the insertion of new lines after html
            pdf.save('Test.pdf');
        }, margins);
    }
    
</script>